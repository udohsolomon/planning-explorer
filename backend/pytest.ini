[pytest]
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto

# Enable verbose output
addopts =
    -v
    --strict-markers
    --tb=short
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing:skip-covered
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --color=yes
    -p no:warnings

# Test markers for different test types
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require live services)
    live_data: Tests that require live Elasticsearch data
    performance: Performance and load tests
    slow: Slow running tests
    auth: Authentication and authorization tests
    search: Search functionality tests
    ai: AI feature tests
    reports: Report generation tests
    user: User management tests
    api: API endpoint tests
    elasticsearch: Elasticsearch integration tests
    supabase: Supabase integration tests

# Coverage settings
[coverage:run]
source = app
omit =
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */test_env/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
